name: Prepare new version
on:
  pull_request:
    types: [closed]
    branches: [main]
  workflow_dispatch:

jobs:
  testing:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Change wrapper permissions
        run: chmod +x ./gradlew
      - name: Test with Gradle
        run: ./gradlew test
      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties

  tag:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: testing
    outputs:
      version: ${{ steps.bump-version.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.67.0
        id: bump-version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_BRANCHES: main
          REPO_OWNER: parts-picker
          WITH_V: true

  docker:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: tag
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push to DockerHub
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: robguth/parts-picker:web-${{ needs.tag.outputs.version }},robguth/parts-picker:web-latest



